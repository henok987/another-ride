{
  "info": {
    "name": "Ride Service API - Complete Collection",
    "description": "Comprehensive API collection for ride service with organized folders, all endpoints, and axios integration",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "🔐 Authentication",
      "description": "Authentication endpoints for all user types",
      "item": [
        {
          "name": "Passenger Register",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/v1/auth/passenger/register",
              "host": ["{{baseUrl}}"],
              "path": ["v1", "auth", "passenger", "register"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Smith\",\n  \"phone\": \"+1234567890\",\n  \"email\": \"john.smith@example.com\",\n  \"password\": \"SecurePass123!\",\n  \"emergencyContacts\": [\n    {\n      \"name\": \"Jane Smith\",\n      \"phone\": \"+1234567891\",\n      \"relationship\": \"Spouse\"\n    },\n    {\n      \"name\": \"Bob Johnson\",\n      \"phone\": \"+1234567892\",\n      \"relationship\": \"Friend\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "  const json = pm.response.json();",
                  "  if (json.passenger && json.passenger._id) {",
                  "    pm.environment.set('passengerId', json.passenger._id);",
                  "    pm.environment.set('passengerName', json.passenger.name);",
                  "  }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Passenger Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/v1/auth/passenger/login",
              "host": ["{{baseUrl}}"],
              "path": ["v1", "auth", "passenger", "login"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.smith@example.com\",\n  \"password\": \"SecurePass123!\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "  const json = pm.response.json();",
                  "  if (json.token) pm.environment.set('passengerToken', json.token);",
                  "  if (json.passenger && json.passenger._id) {",
                  "    pm.environment.set('passengerId', json.passenger._id);",
                  "    pm.environment.set('passengerName', json.passenger.name);",
                  "  }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Staff Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/v1/auth/staff/login",
              "host": ["{{baseUrl}}"],
              "path": ["v1", "auth", "staff", "login"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"staff_dispatch\",\n  \"password\": \"StaffPass123!\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "  const json = pm.response.json();",
                  "  if (json.token) pm.environment.set('staffToken', json.token);",
                  "  if (json.staff && json.staff._id) {",
                  "    pm.environment.set('staffId', json.staff._id);",
                  "    pm.environment.set('staffName', json.staff.fullName);",
                  "  }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Admin Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/v1/auth/admin/login",
              "host": ["{{baseUrl}}"],
              "path": ["v1", "auth", "admin", "login"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"admin_user\",\n  \"password\": \"AdminPass123!\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "  const json = pm.response.json();",
                  "  if (json.token) pm.environment.set('adminToken', json.token);",
                  "  if (json.admin && json.admin._id) {",
                  "    pm.environment.set('adminId', json.admin._id);",
                  "    pm.environment.set('adminName', json.admin.fullName);",
                  "  }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Staff Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/v1/auth/staff/login",
              "host": ["{{baseUrl}}"],
              "path": ["v1", "auth", "staff", "login"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"staff_user\",\n  \"password\": \"StaffPass123!\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "  const json = pm.response.json();",
                  "  if (json.token) pm.environment.set('staffToken', json.token);",
                  "  if (json.staff && json.staff._id) {",
                  "    pm.environment.set('staffId', json.staff._id);",
                  "    pm.environment.set('staffName', json.staff.fullName);",
                  "  }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "👤 Passenger APIs",
      "description": "All passenger-related endpoints with comprehensive dummy data",
      "item": [
        {
          "name": "🚗 Driver Discovery",
          "item": [
            {
              "name": "Discover Drivers + Estimate Fare (Combined)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{passengerToken}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/drivers/discover-and-estimate",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "drivers", "discover-and-estimate"]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"vehicleType\": \"mini\",\n  \"radiusKm\": 5,\n  \"pickup\": {\n    \"latitude\": 40.7128,\n    \"longitude\": -74.0060,\n    \"address\": \"Times Square, New York, NY\"\n  },\n  \"dropoff\": {\n    \"latitude\": 40.7589,\n    \"longitude\": -73.9851,\n    \"address\": \"Central Park, New York, NY\"\n  }\n}"
                }
              },
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Response includes drivers array', function () {",
                      "  const json = pm.response.json();",
                      "  pm.expect(json).to.have.property('drivers');",
                      "  pm.expect(json.drivers).to.be.an('array');",
                      "});",
                      "pm.test('Response includes fare estimate', function () {",
                      "  const json = pm.response.json();",
                      "  pm.expect(json).to.have.property('estimate');",
                      "  pm.expect(json.estimate).to.have.property('vehicleType');",
                      "  pm.expect(json.estimate).to.have.property('distanceKm');",
                      "  pm.expect(json.estimate).to.have.property('estimatedFare');",
                      "  pm.expect(json.estimate).to.have.property('fareBreakdown');",
                      "});",
                      "pm.test('Each driver includes required fields', function () {",
                      "  const json = pm.response.json();",
                      "  if (json.drivers.length > 0) {",
                      "    json.drivers.forEach(driver => {",
                      "      pm.expect(driver).to.have.property('id');",
                      "      pm.expect(driver).to.have.property('driverId');",
                      "      pm.expect(driver).to.have.property('vehicleType');",
                      "      pm.expect(driver).to.have.property('rating');",
                      "      pm.expect(driver).to.have.property('distanceKm');",
                      "      pm.expect(driver).to.have.property('driver');",
                      "    });",
                      "  }",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "Discover Drivers + Estimate Fare - Sedan",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{passengerToken}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/drivers/discover-and-estimate",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "drivers", "discover-and-estimate"]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"vehicleType\": \"sedan\",\n  \"radiusKm\": 10,\n  \"pickup\": {\n    \"latitude\": 40.7505,\n    \"longitude\": -73.9934,\n    \"address\": \"Brooklyn Bridge, New York, NY\"\n  },\n  \"dropoff\": {\n    \"latitude\": 40.6892,\n    \"longitude\": -74.0445,\n    \"address\": \"Statue of Liberty, New York, NY\"\n  }\n}"
                }
              }
            },
            {
              "name": "Find Available Drivers (Legacy)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{passengerToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/drivers/available?latitude=40.7128&longitude=-74.0060&radiusKm=5&vehicleType=mini",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "drivers", "available"],
                  "query": [
                    {"key": "latitude", "value": "40.7128"},
                    {"key": "longitude", "value": "-74.0060"},
                    {"key": "radiusKm", "value": "5"},
                    {"key": "vehicleType", "value": "mini"}
                  ]
                }
              }
            }
          ]
        },
        {
          "name": "💰 Fare Estimation",
          "item": [
            {
              "name": "Estimate Fare - Mini",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{passengerToken}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/drivers/estimate-fare",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "drivers", "estimate-fare"]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"vehicleType\": \"mini\",\n  \"pickup\": {\n    \"latitude\": 40.7128,\n    \"longitude\": -74.0060,\n    \"address\": \"Times Square, New York, NY\"\n  },\n  \"dropoff\": {\n    \"latitude\": 40.7589,\n    \"longitude\": -73.9851,\n    \"address\": \"Central Park, New York, NY\"\n  }\n}"
                }
              }
            },
            {
              "name": "Estimate Fare - Sedan",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{passengerToken}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/drivers/estimate-fare",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "drivers", "estimate-fare"]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"vehicleType\": \"sedan\",\n  \"pickup\": {\n    \"latitude\": 40.7505,\n    \"longitude\": -73.9934,\n    \"address\": \"Brooklyn Bridge, New York, NY\"\n  },\n  \"dropoff\": {\n    \"latitude\": 40.6892,\n    \"longitude\": -74.0445,\n    \"address\": \"Statue of Liberty, New York, NY\"\n  }\n}"
                }
              }
            },
            {
              "name": "Estimate Fare - Van",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{passengerToken}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/drivers/estimate-fare",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "drivers", "estimate-fare"]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"vehicleType\": \"van\",\n  \"pickup\": {\n    \"latitude\": 40.7614,\n    \"longitude\": -73.9776,\n    \"address\": \"Grand Central Terminal, New York, NY\"\n  },\n  \"dropoff\": {\n    \"latitude\": 40.6892,\n    \"longitude\": -74.0445,\n    \"address\": \"JFK Airport, New York, NY\"\n  }\n}"
                }
              }
            }
          ]
        },
        {
          "name": "📱 Booking Management",
          "item": [
            {
              "name": "Create Booking - Mini",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{passengerToken}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/bookings",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "bookings"]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"vehicleType\": \"mini\",\n  \"pickup\": {\n    \"latitude\": 40.7128,\n    \"longitude\": -74.0060,\n    \"address\": \"Times Square, New York, NY\"\n  },\n  \"dropoff\": {\n    \"latitude\": 40.7589,\n    \"longitude\": -73.9851,\n    \"address\": \"Central Park, New York, NY\"\n  },\n  \"passengerCount\": 2,\n  \"notes\": \"Please call when you arrive\"\n}"
                }
              },
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code === 201) {",
                      "  const json = pm.response.json();",
                      "  if (json.id) pm.environment.set('bookingId', json.id);",
                      "  if (json.passengerId) pm.environment.set('passengerId', json.passengerId);",
                      "  if (json.passenger && json.passenger.name) pm.environment.set('passengerName', json.passenger.name);",
                      "  if (json.passenger && json.passenger.phone) pm.environment.set('passengerPhone', json.passenger.phone);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "Create Booking - Sedan",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{passengerToken}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/bookings",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "bookings"]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"vehicleType\": \"sedan\",\n  \"pickup\": {\n    \"latitude\": 40.7505,\n    \"longitude\": -73.9934,\n    \"address\": \"Brooklyn Bridge, New York, NY\"\n  },\n  \"dropoff\": {\n    \"latitude\": 40.6892,\n    \"longitude\": -74.0445,\n    \"address\": \"Statue of Liberty, New York, NY\"\n  },\n  \"passengerCount\": 4,\n  \"notes\": \"Business trip, need receipt\"\n}"
                }
              }
            },
            {
              "name": "Create Booking - Van",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{passengerToken}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/bookings",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "bookings"]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"vehicleType\": \"van\",\n  \"pickup\": {\n    \"latitude\": 40.7614,\n    \"longitude\": -73.9776,\n    \"address\": \"Grand Central Terminal, New York, NY\"\n  },\n  \"dropoff\": {\n    \"latitude\": 40.6892,\n    \"longitude\": -74.0445,\n    \"address\": \"JFK Airport, New York, NY\"\n  },\n  \"passengerCount\": 6,\n  \"notes\": \"Family trip with luggage\"\n}"
                }
              }
            },
            {
              "name": "Get My Bookings",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{passengerToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/bookings?page=1&limit=10&status=pending",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "bookings"],
                  "query": [
                    {"key": "page", "value": "1"},
                    {"key": "limit", "value": "10"},
                    {"key": "status", "value": "pending"}
                  ]
                }
              },
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Response is an array', function () {",
                      "  const json = pm.response.json();",
                      "  pm.expect(json).to.be.an('array');",
                      "});",
                      "pm.test('Each booking includes passenger information', function () {",
                      "  const json = pm.response.json();",
                      "  if (json.length > 0) {",
                      "    json.forEach(booking => {",
                      "      pm.expect(booking).to.have.property('passenger');",
                      "      if (booking.passenger) {",
                      "        pm.expect(booking.passenger).to.have.property('id');",
                      "        pm.expect(booking.passenger).to.have.property('name');",
                      "        pm.expect(booking.passenger).to.have.property('phone');",
                      "      }",
                      "    });",
                      "  }",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "Get Booking Details",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{passengerToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/bookings/{{bookingId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "bookings", "{{bookingId}}"]
                }
              },
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Response includes passenger information', function () {",
                      "  const json = pm.response.json();",
                      "  pm.expect(json).to.have.property('passenger');",
                      "  if (json.passenger) {",
                      "    pm.expect(json.passenger).to.have.property('id');",
                      "    pm.expect(json.passenger).to.have.property('name');",
                      "    pm.expect(json.passenger).to.have.property('phone');",
                      "  }",
                      "});",
                      "pm.test('Response includes booking details', function () {",
                      "  const json = pm.response.json();",
                      "  pm.expect(json).to.have.property('id');",
                      "  pm.expect(json).to.have.property('vehicleType');",
                      "  pm.expect(json).to.have.property('pickup');",
                      "  pm.expect(json).to.have.property('dropoff');",
                      "  pm.expect(json).to.have.property('status');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "Update Booking",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{passengerToken}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/bookings/{{bookingId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "bookings", "{{bookingId}}"]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"pickup\": {\n    \"latitude\": 40.7128,\n    \"longitude\": -74.0060,\n    \"address\": \"Updated Times Square, New York, NY\"\n  },\n  \"notes\": \"Updated pickup location\"\n}"
                }
              }
            },
            {
              "name": "Cancel Booking",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{passengerToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/bookings/{{bookingId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "bookings", "{{bookingId}}"]
                }
              }
            },
            {
              "name": "Get Vehicle Types",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{passengerToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/bookings/vehicle/types",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "bookings", "vehicle", "types"]
                }
              }
            },
            {
              "name": "Debug Authentication",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{passengerToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/bookings/debug/auth",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "bookings", "debug", "auth"]
                }
              }
            }
          ]
        },
        {
          "name": "📍 Live Location Updates",
          "item": [
            {
              "name": "Update Current Location",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{passengerToken}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/live/push",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "live", "push"]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"latitude\": 40.7128,\n  \"longitude\": -74.0060,\n  \"status\": \"requested\",\n  \"locationType\": \"current\",\n  \"accuracy\": 5.0,\n  \"heading\": 45.0,\n  \"speed\": 0.0\n}"
                }
              }
            },
            {
              "name": "Update Pickup Location",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{passengerToken}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/live/push",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "live", "push"]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"latitude\": 40.7128,\n  \"longitude\": -74.0060,\n  \"status\": \"requested\",\n  \"locationType\": \"pickup\",\n  \"bookingId\": \"{{bookingId}}\",\n  \"accuracy\": 3.0,\n  \"heading\": 90.0,\n  \"speed\": 0.0\n}"
                }
              }
            },
            {
              "name": "Update Dropoff Location",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{passengerToken}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/live/push",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "live", "push"]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"latitude\": 40.7589,\n  \"longitude\": -73.9851,\n  \"status\": \"requested\",\n  \"locationType\": \"dropoff\",\n  \"bookingId\": \"{{bookingId}}\",\n  \"accuracy\": 2.0,\n  \"heading\": 180.0,\n  \"speed\": 0.0\n}"
                }
              }
            }
          ]
        },
        {
          "name": "🗺️ Mapping & Navigation",
          "item": [
            {
              "name": "Get Route",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{passengerToken}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/mapping/route",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "mapping", "route"]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"from\": {\n    \"latitude\": 40.7128,\n    \"longitude\": -74.0060,\n    \"address\": \"Times Square, New York, NY\"\n  },\n  \"to\": {\n    \"latitude\": 40.7589,\n    \"longitude\": -73.9851,\n    \"address\": \"Central Park, New York, NY\"\n  },\n  \"vehicle\": \"mini\"\n}"
                }
              }
            },
            {
              "name": "Get ETA",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{passengerToken}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/mapping/eta",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "mapping", "eta"]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"from\": {\n    \"latitude\": 40.7128,\n    \"longitude\": -74.0060,\n    \"address\": \"Times Square, New York, NY\"\n  },\n  \"to\": {\n    \"latitude\": 40.7589,\n    \"longitude\": -73.9851,\n    \"address\": \"Central Park, New York, NY\"\n  },\n  \"vehicle\": \"mini\"\n}"
                }
              }
            },
            {
              "name": "Get Booking Progress",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{passengerToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/mapping/booking/{{bookingId}}/progress",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "mapping", "booking", "{{bookingId}}", "progress"]
                }
              },
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Response includes passenger information', function () {",
                      "  const json = pm.response.json();",
                      "  pm.expect(json).to.have.property('passenger');",
                      "  if (json.passenger) {",
                      "    pm.expect(json.passenger).to.have.property('id');",
                      "    pm.expect(json.passenger).to.have.property('name');",
                      "    pm.expect(json.passenger).to.have.property('phone');",
                      "  }",
                      "});",
                      "pm.test('Response includes progress data', function () {",
                      "  const json = pm.response.json();",
                      "  pm.expect(json).to.have.property('status');",
                      "  pm.expect(json).to.have.property('distanceKm');",
                      "  pm.expect(json).to.have.property('etaMinutes');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "⭐ Ratings & Reviews",
          "item": [
            {
              "name": "Rate Driver",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{passengerToken}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/bookings/{{bookingId}}/rate-driver",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "bookings", "{{bookingId}}", "rate-driver"]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"rating\": 5,\n  \"comment\": \"Excellent driver! Very professional and friendly. Clean car and safe driving.\",\n  \"categories\": {\n    \"punctuality\": 5,\n    \"courtesy\": 5,\n    \"cleanliness\": 5,\n    \"safety\": 5\n  }\n}"
                }
              },
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Rating successful with passenger token', function () {",
                      "  pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                      "});",
                      "pm.test('Response includes success message', function () {",
                      "  const json = pm.response.json();",
                      "  pm.expect(json).to.have.property('message');",
                      "  pm.expect(json.message).to.include('rated successfully');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "Rate Driver - Poor Experience",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{passengerToken}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/bookings/{{bookingId}}/rate-driver",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "bookings", "{{bookingId}}", "rate-driver"]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"rating\": 2,\n  \"comment\": \"Driver was late and the car was not clean. Route taken was not optimal.\",\n  \"categories\": {\n    \"punctuality\": 1,\n    \"courtesy\": 3,\n    \"cleanliness\": 2,\n    \"safety\": 4\n  }\n}"
                }
              }
            }
          ]
        },
        {
          "name": "📊 Analytics & History",
          "item": [
            {
              "name": "Get Ride History",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{passengerToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/analytics/rides/history?page=1&limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "analytics", "rides", "history"],
                  "query": [
                    {"key": "page", "value": "1"},
                    {"key": "limit", "value": "10"}
                  ]
                }
              }
            },
            {
              "name": "Get Completed Rides",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{passengerToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/analytics/rides/history?status=completed&page=1&limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "analytics", "rides", "history"],
                  "query": [
                    {"key": "status", "value": "completed"},
                    {"key": "page", "value": "1"},
                    {"key": "limit", "value": "10"}
                  ]
                }
              }
            },
            {
              "name": "Get Trip History by Passenger ID",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{passengerToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/analytics/trips/history/passenger/{{passengerId}}?status=completed",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "analytics", "trips", "history", "passenger", "{{passengerId}}"],
                  "query": [
                    {"key": "status", "value": "completed"}
                  ]
                }
              }
            },
            {
              "name": "Get Passenger Rewards",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{passengerToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/analytics/rewards/passenger",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "analytics", "rewards", "passenger"]
                }
              }
            }
          ]
        }
      ]
    },
    {
        "name": "🚗 Driver APIs",
        "description": "All driver-related endpoints with comprehensive dummy data",
        "item": [
          {
            "name": "👤 Driver Management",
            "item": [
              {
                "name": "Set Driver Availability",
                "request": {
                  "method": "POST",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{driverToken}}"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/v1/drivers/{{driverId}}/availability",
                    "host": ["{{baseUrl}}"],
                    "path": ["v1", "drivers", "{{driverId}}", "availability"]
                  },
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"available\": true,\n  \"vehicleType\": \"mini\",\n  \"maxPassengers\": 4,\n  \"notes\": \"Available for rides in Manhattan area\"\n}"
                  }
                }
              },
              {
                "name": "Set Driver Unavailable",
                "request": {
                  "method": "POST",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{driverToken}}"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/v1/drivers/{{driverId}}/availability",
                    "host": ["{{baseUrl}}"],
                    "path": ["v1", "drivers", "{{driverId}}", "availability"]
                  },
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"available\": false,\n  \"reason\": \"Break time\",\n  \"estimatedReturnTime\": \"2024-01-15T15:30:00Z\"\n}"
                  }
                }
              },
              {
                "name": "Update Driver Location",
                "request": {
                  "method": "POST",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{driverToken}}"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/v1/drivers/{{driverId}}/location",
                    "host": ["{{baseUrl}}"],
                    "path": ["v1", "drivers", "{{driverId}}", "location"]
                  },
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"latitude\": 40.7128,\n  \"longitude\": -74.0060,\n  \"bearing\": 45.0,\n  \"speed\": 25.5,\n  \"accuracy\": 3.0,\n  \"address\": \"Times Square, New York, NY\"\n}"
                  }
                }
              }
            ]
          },
          {
            "name": "📱 Booking Management",
            "item": [
              {
                "name": "Accept Booking",
                "request": {
                  "method": "POST",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{driverToken}}"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/v1/bookings/{{bookingId}}/lifecycle",
                    "host": ["{{baseUrl}}"],
                    "path": ["v1", "bookings", "{{bookingId}}", "lifecycle"]
                  },
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"status\": \"accepted\",\n  \"estimatedArrival\": \"2024-01-15T14:15:00Z\",\n  \"notes\": \"On my way to pickup location\"\n}"
                  }
                }
              },
              {
                "name": "Start Trip",
                "request": {
                  "method": "POST",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{driverToken}}"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/v1/bookings/{{bookingId}}/lifecycle",
                    "host": ["{{baseUrl}}"],
                    "path": ["v1", "bookings", "{{bookingId}}", "lifecycle"]
                  },
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"status\": \"ongoing\",\n  \"actualPickupTime\": \"2024-01-15T14:20:00Z\",\n  \"notes\": \"Passenger picked up, starting trip\"\n}"
                  }
                }
              },
              {
                "name": "Complete Trip",
                "request": {
                  "method": "POST",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{driverToken}}"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/v1/bookings/{{bookingId}}/lifecycle",
                    "host": ["{{baseUrl}}"],
                    "path": ["v1", "bookings", "{{bookingId}}", "lifecycle"]
                  },
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"status\": \"completed\",\n  \"actualDropoffTime\": \"2024-01-15T14:45:00Z\",\n  \"fare\": 25.50,\n  \"notes\": \"Trip completed successfully\"\n}"
                  }
                }
              }
            ]
          }
        ]
      },{
        "name": "👨‍💼 Admin/Staff APIs",
        "description": "All admin and staff management endpoints with comprehensive dummy data",
        "item": [
          {
            "name": "👥 User Management",
            "item": [
              {
                "name": "Passenger Management",
                "item": [
                  {
                    "name": "Create Passenger (Admin)",
                    "request": {
                      "method": "POST",
                      "header": [
                        {
                          "key": "Authorization",
                          "value": "Bearer {{adminToken}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "url": {
                        "raw": "{{baseUrl}}/v1/passengers",
                        "host": ["{{baseUrl}}"],
                        "path": ["v1", "passengers"]
                      },
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"name\": \"Alice Johnson\",\n  \"phone\": \"+1234567893\",\n  \"email\": \"alice.johnson@example.com\",\n  \"password\": \"SecurePass123!\",\n  \"emergencyContacts\": [\n    {\n      \"name\": \"Bob Johnson\",\n      \"phone\": \"+1234567894\",\n      \"relationship\": \"Husband\"\n    }\n  ]\n}"
                      }
                    },
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "if (pm.response.code === 201) {",
                            "  const json = pm.response.json();",
                            "  if (json._id) pm.environment.set('passengerId', json._id);",
                            "  if (json.name) pm.environment.set('passengerName', json.name);",
                            "}"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ]
                  },
                  {
                    "name": "List All Passengers",
                    "request": {
                      "method": "GET",
                      "header": [
                        {
                          "key": "Authorization",
                          "value": "Bearer {{adminToken}}"
                        }
                      ],
                      "url": {
                        "raw": "{{baseUrl}}/v1/passengers?page=1&limit=20&status=active",
                        "host": ["{{baseUrl}}"],
                        "path": ["v1", "passengers"],
                        "query": [
                          {"key": "page", "value": "1"},
                          {"key": "limit", "value": "20"},
                          {"key": "status", "value": "active"}
                        ]
                      }
                    }
                  },
                  {
                    "name": "Get Passenger Details",
                    "request": {
                      "method": "GET",
                      "header": [
                        {
                          "key": "Authorization",
                          "value": "Bearer {{adminToken}}"
                        }
                      ],
                      "url": {
                        "raw": "{{baseUrl}}/v1/passengers/{{passengerId}}",
                        "host": ["{{baseUrl}}"],
                        "path": ["v1", "passengers", "{{passengerId}}"]
                      }
                    }
                  },
                  {
                    "name": "Update Passenger",
                    "request": {
                      "method": "PUT",
                      "header": [
                        {
                          "key": "Authorization",
                          "value": "Bearer {{adminToken}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "url": {
                        "raw": "{{baseUrl}}/v1/passengers/{{passengerId}}",
                        "host": ["{{baseUrl}}"],
                        "path": ["v1", "passengers", "{{passengerId}}"]
                      },
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"name\": \"Alice Johnson-Smith\",\n  \"email\": \"alice.smith@example.com\",\n  \"status\": \"active\",\n  \"notes\": \"VIP customer - frequent rider\"\n}"
                      }
                    }
                  },
                  {
                    "name": "Delete Passenger",
                    "request": {
                      "method": "DELETE",
                      "header": [
                        {
                          "key": "Authorization",
                          "value": "Bearer {{adminToken}}"
                        }
                      ],
                      "url": {
                        "raw": "{{baseUrl}}/v1/passengers/{{passengerId}}",
                        "host": ["{{baseUrl}}"],
                        "path": ["v1", "passengers", "{{passengerId}}"]
                      }
                    }
                  }
                ]
              },
              {
                "name": "Driver Management",
                "item": [
                  {
                    "name": "List All Drivers",
                    "request": {
                      "method": "GET",
                      "header": [
                        {
                          "key": "Authorization",
                          "value": "Bearer {{adminToken}}"
                        }
                      ],
                      "url": {
                        "raw": "{{baseUrl}}/v1/drivers?page=1&limit=20&status=active",
                        "host": ["{{baseUrl}}"],
                        "path": ["v1", "drivers"],
                        "query": [
                          {"key": "page", "value": "1"},
                          {"key": "limit", "value": "20"},
                          {"key": "status", "value": "active"}
                        ]
                      }
                    }
                  },
                  {
                    "name": "Get Driver Details",
                    "request": {
                      "method": "GET",
                      "header": [
                        {
                          "key": "Authorization",
                          "value": "Bearer {{adminToken}}"
                        }
                      ],
                      "url": {
                        "raw": "{{baseUrl}}/v1/drivers/{{driverId}}",
                        "host": ["{{baseUrl}}"],
                        "path": ["v1", "drivers", "{{driverId}}"]
                      }
                    }
                  }
                ]
              }
            ]
          },
          {
            "name": "📋 Booking & Trip Management",
            "item": [
              {
                "name": "Booking Management",
                "item": [
                  {
                    "name": "List All Bookings",
                    "request": {
                      "method": "GET",
                      "header": [
                        {
                          "key": "Authorization",
                          "value": "Bearer {{adminToken}}"
                        }
                      ],
                      "url": {
                        "raw": "{{baseUrl}}/v1/bookings?page=1&limit=20&status=pending",
                        "host": ["{{baseUrl}}"],
                        "path": ["v1", "bookings"],
                        "query": [
                          {"key": "page", "value": "1"},
                          {"key": "limit", "value": "20"},
                          {"key": "status", "value": "pending"}
                        ]
                      }
                    }
                  },
                  {
                    "name": "Admin Estimate Fare",
                    "request": {
                      "method": "POST",
                      "header": [
                        {
                          "key": "Authorization",
                          "value": "Bearer {{adminToken}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "url": {
                        "raw": "{{baseUrl}}/v1/bookings/estimate",
                        "host": ["{{baseUrl}}"],
                        "path": ["v1", "bookings", "estimate"]
                      },
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"vehicleType\": \"sedan\",\n  \"pickup\": {\n    \"latitude\": 40.7128,\n    \"longitude\": -74.0060,\n    \"address\": \"Times Square, New York, NY\"\n  },\n  \"dropoff\": {\n    \"latitude\": 40.7589,\n    \"longitude\": -73.9851,\n    \"address\": \"Central Park, New York, NY\"\n  }\n}"
                      }
                    }
                  },
                  {
                    "name": "Assign Booking to Driver",
                    "request": {
                      "method": "POST",
                      "header": [
                        {
                          "key": "Authorization",
                          "value": "Bearer {{adminToken}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "url": {
                        "raw": "{{baseUrl}}/v1/bookings/{{bookingId}}/assign",
                        "host": ["{{baseUrl}}"],
                        "path": ["v1", "bookings", "{{bookingId}}", "assign"]
                      },
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"driverId\": \"{{driverId}}\",\n  \"dispatcherId\": \"{{adminId}}\",\n  \"passengerId\": \"{{passengerId}}\",\n  \"notes\": \"Assigned by dispatcher - high priority\"\n}"
                      }
                    }
                  },
                  {
                    "name": "Update Booking Status - Accepted",
                    "request": {
                      "method": "POST",
                      "header": [
                        {
                          "key": "Authorization",
                          "value": "Bearer {{adminToken}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "url": {
                        "raw": "{{baseUrl}}/v1/bookings/{{bookingId}}/lifecycle",
                        "host": ["{{baseUrl}}"],
                        "path": ["v1", "bookings", "{{bookingId}}", "lifecycle"]
                      },
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"status\": \"accepted\",\n  \"driverId\": \"{{driverId}}\",\n  \"notes\": \"Booking accepted by admin\"\n}"
                      }
                    }
                  },
                  {
                    "name": "Update Booking Status - Ongoing",
                    "request": {
                      "method": "POST",
                      "header": [
                        {
                          "key": "Authorization",
                          "value": "Bearer {{adminToken}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "url": {
                        "raw": "{{baseUrl}}/v1/bookings/{{bookingId}}/lifecycle",
                        "host": ["{{baseUrl}}"],
                        "path": ["v1", "bookings", "{{bookingId}}", "lifecycle"]
                      },
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"status\": \"ongoing\",\n  \"notes\": \"Trip started - admin override\"\n}"
                      }
                    }
                  },
                  {
                    "name": "Update Booking Status - Completed",
                    "request": {
                      "method": "POST",
                      "header": [
                        {
                          "key": "Authorization",
                          "value": "Bearer {{adminToken}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "url": {
                        "raw": "{{baseUrl}}/v1/bookings/{{bookingId}}/lifecycle",
                        "host": ["{{baseUrl}}"],
                        "path": ["v1", "bookings", "{{bookingId}}", "lifecycle"]
                      },
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"status\": \"completed\",\n  \"fare\": 28.75,\n  \"notes\": \"Trip completed - admin override\"\n}"
                      }
                    }
                  },
                  {
                    "name": "Update Booking Status - Canceled",
                    "request": {
                      "method": "POST",
                      "header": [
                        {
                          "key": "Authorization",
                          "value": "Bearer {{adminToken}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "url": {
                        "raw": "{{baseUrl}}/v1/bookings/{{bookingId}}/lifecycle",
                        "host": ["{{baseUrl}}"],
                        "path": ["v1", "bookings", "{{bookingId}}", "lifecycle"]
                      },
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"status\": \"canceled\",\n  \"reason\": \"Passenger no-show\",\n  \"notes\": \"Canceled by admin due to passenger no-show\"\n}"
                      }
                    }
                  }
                ]
              },
              {
                "name": "Assignment Management",
                "item": [
                  {
                    "name": "Create Assignment",
                    "request": {
                      "method": "POST",
                      "header": [
                        {
                          "key": "Authorization",
                          "value": "Bearer {{adminToken}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "url": {
                        "raw": "{{baseUrl}}/v1/assignments",
                        "host": ["{{baseUrl}}"],
                        "path": ["v1", "assignments"]
                      },
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"bookingId\": \"{{bookingId}}\",\n  \"driverId\": \"{{driverId}}\",\n  \"dispatcherId\": \"{{adminId}}\",\n  \"priority\": \"high\",\n  \"notes\": \"VIP customer - expedite assignment\"\n}"
                      }
                    },
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "if (pm.response.code === 201) {",
                            "  const json = pm.response.json();",
                            "  if (json._id) pm.environment.set('assignmentId', json._id);",
                            "}"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ]
                  },
                  {
                    "name": "List All Assignments",
                    "request": {
                      "method": "GET",
                      "header": [
                        {
                          "key": "Authorization",
                          "value": "Bearer {{adminToken}}"
                        }
                      ],
                      "url": {
                        "raw": "{{baseUrl}}/v1/assignments?page=1&limit=20&status=active",
                        "host": ["{{baseUrl}}"],
                        "path": ["v1", "assignments"],
                        "query": [
                          {"key": "page", "value": "1"},
                          {"key": "limit", "value": "20"},
                          {"key": "status", "value": "active"}
                        ]
                      }
                    }
                  },
                  {
                    "name": "Get Assignment Details",
                    "request": {
                      "method": "GET",
                      "header": [
                        {
                          "key": "Authorization",
                          "value": "Bearer {{adminToken}}"
                        }
                      ],
                      "url": {
                        "raw": "{{baseUrl}}/v1/assignments/{{assignmentId}}",
                        "host": ["{{baseUrl}}"],
                        "path": ["v1", "assignments", "{{assignmentId}}"]
                      }
                    }
                  },
                  {
                    "name": "Update Assignment",
                    "request": {
                      "method": "PUT",
                      "header": [
                        {
                          "key": "Authorization",
                          "value": "Bearer {{adminToken}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "url": {
                        "raw": "{{baseUrl}}/v1/assignments/{{assignmentId}}",
                        "host": ["{{baseUrl}}"],
                        "path": ["v1", "assignments", "{{assignmentId}}"]
                      },
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"status\": \"completed\",\n  \"notes\": \"Assignment completed successfully\"\n}"
                      }
                    }
                  },
                  {
                    "name": "Delete Assignment",
                    "request": {
                      "method": "DELETE",
                      "header": [
                        {
                          "key": "Authorization",
                          "value": "Bearer {{adminToken}}"
                        }
                      ],
                      "url": {
                        "raw": "{{baseUrl}}/v1/assignments/{{assignmentId}}",
                        "host": ["{{baseUrl}}"],
                        "path": ["v1", "assignments", "{{assignmentId}}"]
                      }
                    }
                  }
                ]
              },
              {
                "name": "Trip Management",
                "item": [
                  {
                    "name": "Create Trip History",
                    "request": {
                      "method": "POST",
                      "header": [
                        {
                          "key": "Authorization",
                          "value": "Bearer {{adminToken}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "url": {
                        "raw": "{{baseUrl}}/v1/trips",
                        "host": ["{{baseUrl}}"],
                        "path": ["v1", "trips"]
                      },
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"bookingId\": \"{{bookingId}}\",\n  \"driverId\": \"{{driverId}}\",\n  \"passengerId\": \"{{passengerId}}\",\n  \"status\": \"completed\",\n  \"fare\": 25.50,\n  \"distance\": 5.2,\n  \"duration\": 18,\n  \"pickupLocation\": {\n    \"latitude\": 40.7128,\n    \"longitude\": -74.0060,\n    \"address\": \"Times Square, New York, NY\"\n  },\n  \"dropoffLocation\": {\n    \"latitude\": 40.7589,\n    \"longitude\": -73.9851,\n    \"address\": \"Central Park, New York, NY\"\n  },\n  \"startTime\": \"2024-01-15T14:20:00Z\",\n  \"endTime\": \"2024-01-15T14:45:00Z\",\n  \"notes\": \"Smooth trip, no issues\"\n}"
                      }
                    },
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "if (pm.response.code === 201) {",
                            "  const json = pm.response.json();",
                            "  if (json._id) pm.environment.set('tripId', json._id);",
                            "}"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ]
                  },
                  {
                    "name": "List All Trips",
                    "request": {
                      "method": "GET",
                      "header": [
                        {
                          "key": "Authorization",
                          "value": "Bearer {{adminToken}}"
                        }
                      ],
                      "url": {
                        "raw": "{{baseUrl}}/v1/trips?page=1&limit=20&status=completed",
                        "host": ["{{baseUrl}}"],
                        "path": ["v1", "trips"],
                        "query": [
                          {"key": "page", "value": "1"},
                          {"key": "limit", "value": "20"},
                          {"key": "status", "value": "completed"}
                        ]
                      }
                    }
                  },
                  {
                    "name": "Get Trip Details",
                    "request": {
                      "method": "GET",
                      "header": [
                        {
                          "key": "Authorization",
                          "value": "Bearer {{adminToken}}"
                        }
                      ],
                      "url": {
                        "raw": "{{baseUrl}}/v1/trips/{{tripId}}",
                        "host": ["{{baseUrl}}"],
                        "path": ["v1", "trips", "{{tripId}}"]
                      }
                    }
                  },
                  {
                    "name": "Update Trip History",
                    "request": {
                      "method": "PUT",
                      "header": [
                        {
                          "key": "Authorization",
                          "value": "Bearer {{adminToken}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "url": {
                        "raw": "{{baseUrl}}/v1/trips/{{tripId}}",
                        "host": ["{{baseUrl}}"],
                        "path": ["v1", "trips", "{{tripId}}"]
                      },
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"notes\": \"Updated by admin - driver feedback: excellent service\",\n  \"fare\": 26.00\n}"
                      }
                    }
                  },
                  {
                    "name": "Delete Trip History",
                    "request": {
                      "method": "DELETE",
                      "header": [
                        {
                          "key": "Authorization",
                          "value": "Bearer {{adminToken}}"
                        }
                      ],
                      "url": {
                        "raw": "{{baseUrl}}/v1/trips/{{tripId}}",
                        "host": ["{{baseUrl}}"],
                        "path": ["v1", "trips", "{{tripId}}"]
                      }
                    }
                  }
                ]
              }
            ]
          },
          {
            "name": "💰 Pricing Management",
            "item": [
              {
                "name": "Create Pricing - Mini",
                "request": {
                  "method": "POST",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{adminToken}}"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/v1/pricing",
                    "host": ["{{baseUrl}}"],
                    "path": ["v1", "pricing"]
                  },
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"vehicleType\": \"mini\",\n  \"baseFare\": 2.50,\n  \"perKm\": 1.20,\n  \"perMinute\": 0.25,\n  \"waitingPerMinute\": 0.15,\n  \"surgeMultiplier\": 1.0,\n  \"minimumFare\": 5.00,\n  \"maximumFare\": 100.00,\n  \"active\": true,\n  \"description\": \"Standard pricing for mini vehicles\"\n}"
                  }
                },
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "exec": [
                        "if (pm.response.code === 201) {",
                        "  const json = pm.response.json();",
                        "  if (json._id) pm.environment.set('pricingId', json._id);",
                        "}"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ]
              },
              {
                "name": "Create Pricing - Sedan",
                "request": {
                  "method": "POST",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{adminToken}}"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/v1/pricing",
                    "host": ["{{baseUrl}}"],
                    "path": ["v1", "pricing"]
                  },
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"vehicleType\": \"sedan\",\n  \"baseFare\": 3.00,\n  \"perKm\": 1.50,\n  \"perMinute\": 0.30,\n  \"waitingPerMinute\": 0.20,\n  \"surgeMultiplier\": 1.0,\n  \"minimumFare\": 7.00,\n  \"maximumFare\": 150.00,\n  \"active\": true,\n  \"description\": \"Premium pricing for sedan vehicles\"\n}"
                  }
                }
              },
              {
                "name": "Create Pricing - Van",
                "request": {
                  "method": "POST",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{adminToken}}"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/v1/pricing",
                    "host": ["{{baseUrl}}"],
                    "path": ["v1", "pricing"]
                  },
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"vehicleType\": \"van\",\n  \"baseFare\": 4.00,\n  \"perKm\": 2.00,\n  \"perMinute\": 0.40,\n  \"waitingPerMinute\": 0.25,\n  \"surgeMultiplier\": 1.0,\n  \"minimumFare\": 10.00,\n  \"maximumFare\": 200.00,\n  \"active\": true,\n  \"description\": \"Luxury pricing for van vehicles\"\n}"
                  }
                }
              },
              {
                "name": "List All Pricing",
                "request": {
                  "method": "GET",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{adminToken}}"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/v1/pricing?active=true",
                    "host": ["{{baseUrl}}"],
                    "path": ["v1", "pricing"],
                    "query": [
                      {"key": "active", "value": "true"}
                    ]
                  }
                }
              },
              {
                "name": "Get Pricing Details",
                "request": {
                  "method": "GET",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{adminToken}}"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/v1/pricing/{{pricingId}}",
                    "host": ["{{baseUrl}}"],
                    "path": ["v1", "pricing", "{{pricingId}}"]
                  }
                }
              },
              {
                "name": "Update Pricing (Broadcast)",
                "request": {
                  "method": "PUT",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{adminToken}}"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/v1/pricing/{{pricingId}}",
                    "host": ["{{baseUrl}}"],
                    "path": ["v1", "pricing", "{{pricingId}}"]
                  },
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"surgeMultiplier\": 1.5,\n  \"description\": \"Updated pricing with surge multiplier for peak hours\",\n  \"effectiveFrom\": \"2024-01-15T17:00:00Z\",\n  \"effectiveTo\": \"2024-01-15T19:00:00Z\"\n}"
                  }
                }
              },
              {
                "name": "Delete Pricing",
                "request": {
                  "method": "DELETE",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{adminToken}}"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/v1/pricing/{{pricingId}}",
                    "host": ["{{baseUrl}}"],
                    "path": ["v1", "pricing", "{{pricingId}}"]
                  }
                }
              }
            ]
          },
          {
            "name": "📊 Analytics & Reports",
            "item": [
              {
                "name": "Dashboard Statistics",
                "request": {
                  "method": "GET",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{adminToken}}"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/v1/analytics/dashboard?period=today",
                    "host": ["{{baseUrl}}"],
                    "path": ["v1", "analytics", "dashboard"],
                    "query": [
                      {"key": "period", "value": "today"}
                    ]
                  }
                }
              },
              {
                "name": "Daily Report",
                "request": {
                  "method": "GET",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{adminToken}}"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/v1/analytics/reports/daily?date=2024-01-15",
                    "host": ["{{baseUrl}}"],
                    "path": ["v1", "analytics", "reports", "daily"],
                    "query": [
                      {"key": "date", "value": "2024-01-15"}
                    ]
                  }
                }
              },
              {
                "name": "Weekly Report",
                "request": {
                  "method": "GET",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{adminToken}}"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/v1/analytics/reports/weekly?week=2024-W03",
                    "host": ["{{baseUrl}}"],
                    "path": ["v1", "analytics", "reports", "weekly"],
                    "query": [
                      {"key": "week", "value": "2024-W03"}
                    ]
                  }
                }
              },
              {
                "name": "Monthly Report",
                "request": {
                  "method": "GET",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{adminToken}}"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/v1/analytics/reports/monthly?month=2024-01",
                    "host": ["{{baseUrl}}"],
                    "path": ["v1", "analytics", "reports", "monthly"],
                    "query": [
                      {"key": "month", "value": "2024-01"}
                    ]
                  }
                }
              },
              {
                "name": "Finance Overview",
                "request": {
                  "method": "GET",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{adminToken}}"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/v1/analytics/finance/overview?period=monthly&month=2024-01",
                    "host": ["{{baseUrl}}"],
                    "path": ["v1", "analytics", "finance", "overview"],
                    "query": [
                      {"key": "period", "value": "monthly"},
                      {"key": "month", "value": "2024-01"}
                    ]
                  }
                }
              },
              {
                "name": "Commission Management",
                "item": [
                  {
                    "name": "Get Current Commission Rate",
                    "request": {
                      "method": "GET",
                      "header": [
                        {
                          "key": "Authorization",
                          "value": "Bearer {{adminToken}}"
                        }
                      ],
                      "url": {
                        "raw": "{{baseUrl}}/v1/analytics/commission",
                        "host": ["{{baseUrl}}"],
                        "path": ["v1", "analytics", "commission"]
                      }
                    }
                  },
                  {
                    "name": "Set Commission Rate",
                    "request": {
                      "method": "POST",
                      "header": [
                        {
                          "key": "Authorization",
                          "value": "Bearer {{adminToken}}"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "url": {
                        "raw": "{{baseUrl}}/v1/analytics/commission",
                        "host": ["{{baseUrl}}"],
                        "path": ["v1", "analytics", "commission"]
                      },
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"percentage\": 15.0,\n  \"description\": \"Standard commission rate for all rides\",\n  \"effectiveFrom\": \"2024-01-15T00:00:00Z\",\n  \"vehicleType\": \"all\"\n}"
                      }
                    }
                  }
                ]
              },
              {
                "name": "Driver Earnings Management",
                "item": [
                  {
                    "name": "Get Driver Earnings",
                    "request": {
                      "method": "GET",
                      "header": [
                        {
                          "key": "Authorization",
                          "value": "Bearer {{adminToken}}"
                        }
                      ],
                      "url": {
                        "raw": "{{baseUrl}}/v1/analytics/earnings/driver?driverId={{driverId}}&period=monthly&month=2024-01",
                        "host": ["{{baseUrl}}"],
                        "path": ["v1", "analytics", "earnings", "driver"],
                        "query": [
                          {"key": "driverId", "value": "{{driverId}}"},
                          {"key": "period", "value": "monthly"},
                          {"key": "month", "value": "2024-01"}
                        ]
                      }
                    }
                  }
                ]
              },
              {
                "name": "Ride History Management",
                "item": [
                  {
                    "name": "Get All Ride History",
                    "request": {
                      "method": "GET",
                      "header": [
                        {
                          "key": "Authorization",
                          "value": "Bearer {{adminToken}}"
                        }
                      ],
                      "url": {
                        "raw": "{{baseUrl}}/v1/analytics/rides/history?page=1&limit=50&status=completed&dateFrom=2024-01-01&dateTo=2024-01-31",
                        "host": ["{{baseUrl}}"],
                        "path": ["v1", "analytics", "rides", "history"],
                        "query": [
                          {"key": "page", "value": "1"},
                          {"key": "limit", "value": "50"},
                          {"key": "status", "value": "completed"},
                          {"key": "dateFrom", "value": "2024-01-01"},
                          {"key": "dateTo", "value": "2024-01-31"}
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          },
          {
            "name": "📍 Live Updates Management",
            "item": [
              {
                "name": "Create Live Update (Admin)",
                "request": {
                  "method": "POST",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{adminToken}}"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/v1/live",
                    "host": ["{{baseUrl}}"],
                    "path": ["v1", "live"]
                  },
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"driverId\": \"{{driverId}}\",\n  \"latitude\": 40.7128,\n  \"longitude\": -74.0060,\n  \"status\": \"en_route\",\n  \"tripId\": \"{{tripId}}\",\n  \"bearing\": 45.0,\n  \"speed\": 30.5,\n  \"accuracy\": 2.0,\n  \"address\": \"Times Square, New York, NY\"\n}"
                  }
                },
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "exec": [
                        "if (pm.response.code === 201) {",
                        "  const json = pm.response.json();",
                        "  if (json._id) pm.environment.set('liveId', json._id);",
                        "}"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ]
              },
              {
                "name": "List Live Updates (Admin)",
                "request": {
                  "method": "GET",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{adminToken}}"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/v1/live?page=1&limit=20&status=active",
                    "host": ["{{baseUrl}}"],
                    "path": ["v1", "live"],
                    "query": [
                      {"key": "page", "value": "1"},
                      {"key": "limit", "value": "20"},
                      {"key": "status", "value": "active"}
                    ]
                  }
                }
              },
              {
                "name": "Get Live Update Details (Admin)",
                "request": {
                  "method": "GET",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{adminToken}}"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/v1/live/{{liveId}}",
                    "host": ["{{baseUrl}}"],
                    "path": ["v1", "live", "{{liveId}}"]
                  }
                }
              },
              {
                "name": "Update Live Update (Admin)",
                "request": {
                  "method": "PUT",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{adminToken}}"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/v1/live/{{liveId}}",
                    "host": ["{{baseUrl}}"],
                    "path": ["v1", "live", "{{liveId}}"]
                  },
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"status\": \"arrived\",\n  \"notes\": \"Driver has arrived at pickup location\"\n}"
                  }
                }
              },
              {
                "name": "Delete Live Update (Admin)",
                "request": {
                  "method": "DELETE",
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Bearer {{adminToken}}"
                    }
                  ],
                  "url": {
                    "raw": "{{baseUrl}}/v1/live/{{liveId}}",
                    "host": ["{{baseUrl}}"],
                    "path": ["v1", "live", "{{liveId}}"]
                  }
                }
              }
            ]
          }
        ]
      }
  ,
    {
      "name": "💳 Wallet",
      "item": [
        {
          "name": "Topup Wallet (SantimPay DirectPayment)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{passengerToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/v1/wallet/topup", "host": ["{{baseUrl}}"], "path": ["v1","wallet","topup"] },
            "body": { "mode": "raw", "raw": "{\n  \"amount\": 100,\n  \"paymentMethod\": \"telebirr\",\n  \"phoneNumber\": \"+2519XXXXXXX\",\n  \"reason\": \"Wallet Topup\"\n}" }
          }
        },
        {
          "name": "Wallet Transactions",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{passengerToken}}" } ],
            "url": { "raw": "{{baseUrl}}/v1/wallet/transactions/{{passengerId}}", "host": ["{{baseUrl}}"], "path": ["v1","wallet","transactions","{{passengerId}}"] }
          }
        },
        {
          "name": "Driver Withdraw (B2C Payout)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{driverToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/v1/wallet/withdraw", "host": ["{{baseUrl}}"], "path": ["v1","wallet","withdraw"] },
            "body": { "mode": "raw", "raw": "{\n  \"amount\": 50,\n  \"destination\": \"+2519XXXXXXX\",\n  \"method\": \"santimpay\"\n}" }
          }
        },
        {
          "name": "SantimPay Webhook (Callback)",
          "request": {
            "method": "POST",
            "header": [ { "key": "Content-Type", "value": "application/json" } ],
            "url": { "raw": "{{baseUrl}}/v1/wallet/webhook", "host": ["{{baseUrl}}"], "path": ["v1","wallet","webhook"] },
            "body": { "mode": "raw", "raw": "{\n  \"ID\": \"{{transactionId}}\",\n  \"Status\": \"SUCCESS\",\n  \"TxnId\": \"TX123\",\n  \"RefId\": \"REF123\",\n  \"Commission\": 1.5,\n  \"TotalAmount\": 101.5,\n  \"Msisdn\": \"+2519XXXXXXX\"\n}" }
          }
        }
      ]
    }
  ]
}
